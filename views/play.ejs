<%- include('partials/header') %>

<div class="row">
    <div class="col-2 roomInfo">
        <div class="titleContainer">
            <h3 class="title">Game Info</h3>
        </div>
        <p class="sideTitle">Game ID</p>
        <p><%- roomId %></p>
        <p class="sideTitle">Starting Page</p>
        <p><%- startPage %></p>
        <p class="sideTitle">End Page</p>
        <p><%- endPage %></p>
        <% if (host === true) { %>
        <p class="sideTitle">Start Game</p>
        <button id="startButton" onClick="startGame()">Start</button>
        <% } %>
        <div class="titleContainer">
            <h3 class="title">Player Info</h3>
        </div>
        <ul id="usersList">

        </ul>
    </div>
    <div class="gameContainer col-10">
        <div class="iframeContainer">
            <iframe id="gameFrame"></iframe>
        </div>
        <div class="startPage">
            <div class="jumbotron jumbotron-fluid">
                <div class="container">
                    <h1 class="display-4">Starting Soon</h1>
                    <p class="lead">The host will need to press the 'start' button.</p>
                </div>
            </div>
        </div>
    </div>

</div>
<script>
    const socket = io('/', { secure: true });
    $(document).ready(() => {
        // Add disconnect function to body
        $('body').attr('onunload', "disconnectEvent();");
        $('#gameFrame').attr('onLoad', 'iframeChanged()');
        const startPage = encodeURIComponent(`<%- startPage %>`)
        $('#gameFrame').attr('src', `/room/<%- roomId %>/wiki/${startPage}`);
        iframeChanged();
        socket.on('update', (data) => {
            console.log(JSON.parse(data));
            const cleanData = JSON.parse(data);
            const users = cleanData.users;
            let html = [];
            for (let i = 0; i < users.length; i++) {
                user = users[i];
                if (users[i].userId === "<%- userId %>") {
                    html.push(html[0]);
                    html[0] = (`<li class=${user.found ? "found" : ""}>${user.username} - ${user.currentUrl.charAt(0).toUpperCase() + user.currentUrl.slice(1)}</li>`)
                } else {
                    html.push(`<li class=${user.found ? "found" : ""}>${user.username} - ${user.currentUrl.charAt(0).toUpperCase() + user.currentUrl.slice(1)}</li>`)
                }
            }
            $('#usersList').html(html.join(""));
        })
        socket.on('gameStarted', () => {
            console.log("Game Started");
            $('.startPage').remove();
            $('.iframeContainer').css('display', 'block');
        })
    })
    // URL Update Function (when iframe changes)
    const iframe = document.getElementById('gameFrame');
    iframeChanged = () => {
        // Runs every time iframe link is changed
        $('#gameFrame').on('load', () => {
            const innerDoc = iframe.contentDocument || iframe.contentWindow.document;
            let title;
            if (innerDoc.getElementById('wikiPageTitle')) {
                title = innerDoc.getElementById('wikiPageTitle').innerHTML;
            } else {
                title = "None";
            }

            // Emit URL update socket event
            socket.emit('urlUpdate', {
                roomId: "<%- roomId  %>",
                userId: "<%- userId %>",
                currentUrl: title
            })
            if (title === "<%- endPage %>") {
                socket.emit('foundPage', {
                    roomId: "<%- roomId %>",
                    userId: "<%- userId %>"
                })
            }
        })
    }
    startGame = () => {
        socket.emit('startGame', { roomId: "<%- roomId %>" });
    }
    $(window).on('unload', function () {
        disconnectEvent();
    });
    disconnectEvent = () => {
        socket.emit('leaveRoom', {
            roomId: "<%- roomId %>",
            userId: "<%- userId %>"
        })
    }

</script>

<%- include('partials/footer') %>